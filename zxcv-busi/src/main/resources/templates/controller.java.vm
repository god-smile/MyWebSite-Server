package ${package.Controller};

import java.util.Date;
import com.zxcv.api.commom.base.ErrorType;
import com.zxcv.api.commom.exception.BizException;
import org.springframework.web.bind.annotation.RequestMapping;
import io.swagger.annotations.Api;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.alibaba.fastjson.JSONObject;
import com.zxcv.api.commom.bean.BizResult;
import com.zxcv.api.commom.bean.PageBean;
import ${cfg.apiServicePackagePath}.${table.serviceName};
import ${cfg.dtoPath};
import ${cfg.queryPath};
import ${cfg.operPath};
import com.zxcv.portal.common.vo.BizResultVO;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import com.zxcv.api.commom.service.sys.dto.AuthUserInfo;


 /**
  * $!{table.comment} 前端控制器
  * Copyright: Copyright (c) ${year}
  * @ClassName: ${table.controllerName}.java
  * @Description:
  * @version: v1.0.0
  * @author: ${author}
  * @date: ${date}
  * Modification History:
  * Date             Author          Version            Description
  * ---------------------------------------------------------*
  * ${date}         ${author}         v1.0.0               创建
  */
@Api(value = "$!{table.comment}管理", description = "$!{table.comment}管理")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
#set($serviceName ="${table.serviceName.substring(0,1).toLowerCase()}${table.serviceName.substring(1)}")
 private static final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);

    @Autowired
    private ${table.ServiceName} ${serviceName};


    @ApiOperation("新增$!{table.comment}")
    @PostMapping("/save${table.entityName}")
    public BizResultVO<Integer> save${table.entityName}(@RequestBody SaveAndModify${table.entityName}Req req) {
    	AuthUserInfo userInfo = this.getUserInfo();
        if(userInfo == null){
        	throw new BizException(ErrorType.AUTH_TOKEN_NOT_EXISTS);
        }
        req.setCreateEmpId(userInfo.getId()+"");
        req.setCreateEmpName(userInfo.getOpName());
        req.setCreateTime(new Date());
        logger.info("begin新增$!{table.comment}controller,入参={}", JSONObject.toJSON(req));
        BizResult<Integer> result = ${serviceName}.save${table.entityName}(req);
        logger.info("end新增$!{table.comment} controller,结果={}", JSONObject.toJSON(result));
        return new BizResultVO<Integer>(result);
    }

    @ApiOperation("修改$!{table.comment}")
    @PostMapping("/update${table.entityName}ById")
    public BizResultVO<Integer> update${table.entityName}ById(@RequestBody SaveAndModify${table.entityName}Req req) {
    	AuthUserInfo userInfo = this.getUserInfo();
        if(userInfo == null ){
        	throw new BizException(ErrorType.AUTH_TOKEN_NOT_EXISTS);
        }
        req.setModifyEmpId(userInfo.getId()+"");
        req.setModifyEmpName(userInfo.getOpName());
        req.setModifyTime(new Date());
        logger.info("begin修改$!{table.comment}controller,入参={}", JSONObject.toJSON(req));
        BizResult<Integer> result = ${serviceName}.update${table.entityName}ById(req);
        logger.info("end修改$!{table.comment}controller,结果={}", JSONObject.toJSON(result));
        return new BizResultVO<Integer>(result);
    }

    @ApiOperation("删除$!{table.comment}")
    @PostMapping("/delete${table.entityName}")
    public BizResultVO<Integer> delete${table.entityName}(@RequestBody SaveAndModify${table.entityName}Req req) {
    	AuthUserInfo userInfo = this.getUserInfo();
        if(userInfo == null ){
        	throw new BizException(ErrorType.AUTH_TOKEN_NOT_EXISTS);
        }
        req.setModifyEmpId(userInfo.getId()+"");
        req.setModifyEmpName(userInfo.getOpName());
        req.setModifyTime(new Date());
        logger.info("begin删除$!{table.comment}controller,入参={}", JSONObject.toJSON(req));
        BizResult<Integer> result = ${serviceName}.delete${table.entityName}(req);
        logger.info("end删除$!{table.comment} controller,结果={}", JSONObject.toJSON(result));
        return new BizResultVO<Integer>(result);
    }

    @ApiOperation("查询$!{table.comment}对象")
    @PostMapping("/select${table.entityName}")
    public BizResultVO<${table.entityName}DTO> select${table.entityName}(@RequestBody Query${table.entityName}Req req) {
        logger.info("begin查询$!{table.comment}对象controller,入参={}", JSONObject.toJSON(req));
        BizResult<${table.entityName}DTO> result = ${serviceName}.select${table.entityName}(req);
        logger.info("end查询$!{table.comment}对象controller,结果={}", JSONObject.toJSON(result));
        return new BizResultVO<${table.entityName}DTO>(result);
    }

    @ApiOperation("分页-$!{table.comment}对象")
    @PostMapping("/query${table.entityName}ForPage")
    public BizResultVO<PageBean<${table.entityName}DTO>> query${table.entityName}ForPage(@RequestBody Query${table.entityName}Req req) {
        logger.info("begin分页-查询$!{table.comment}controller,入参={}", JSONObject.toJSON(req));
        BizResult<PageBean<${table.entityName}DTO>> result = ${serviceName}.query${table.entityName}ForPage(req);
        logger.info("end分页查询$!{table.comment}controller,结果...");
        return new BizResultVO<PageBean<${table.entityName}DTO>>(result);
    }

}

#end